{
    "sourceFile": "src/layout/index.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1698110998372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1698111147904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,22 @@\n         class=\"flex-col flex-shrink-0 transition-width-300\"\n         :class=\"appStore.collapsed ? 'w-64' : 'w-220'\"\n         border-r=\"1px solid #efeff5\"\n       >\n-        <header class=\"f-c-c h-60\" border-b=\"1px solid #efeff5\">Vue Simple Admin</header>\n+        <header class=\"f-c-c h-60\" border-b=\"1px solid #efeff5\">\n+          <span class=\"font-bold text-18 text-primary\">Logo</span>\n+        </header>\n+        <n-menu\n+          ref=\"menu\"\n+          accordion\n+          :indent=\"18\"\n+          :collapsed-icon-size=\"22\"\n+          :collapsed-width=\"64\"\n+          :collapsed=\"appStore.collapsed\"\n+          :options=\"menuOptions\"\n+          :value=\"route.name\"\n+          @update:value=\"handleMenuSelect\"\n+        />\n       </aside>\n   \n       <article class=\"w-0 flex-col flex-1\">\n         <header class=\"h-60 flex-shrink-0 flex items-center\" border-b=\"1px solid #efeff5\">\n@@ -28,9 +41,102 @@\n   \n   <script setup>\n   import { useAppStore } from '@/store/app'\n   import { useUserStore } from '@/store/user'\n+  import { usePermissionStore } from '@/store/permission'\n+  import { h } from 'vue'\n   \n   const appStore = useAppStore()\n   const userStore = useUserStore()\n+  const permissionStore = usePermissionStore()\n+  const router = useRouter()\n+  const route = useRoute()\n+  \n+  const menu = ref(null)\n+  \n+  const menuOptions = computed(() => {\n+    return permissionStore.menus.map((item) => getMenuItem(item))\n+  })\n+  \n+  // 当只有一个子路由时，只展示子路由，由于需要考虑子路由还有子路由的情况，所以此处写法比较复杂\n+  // 如果实在不好理解，可以考虑另一种不考虑单个子路由情况的写法: getMenuItem2\n+  function getMenuItem(route, basePath = '') {\n+    let menuItem = {\n+      label: (route.meta && route.meta.title) || route.name,\n+      key: route.name,\n+      path: resolvePath(basePath, route.path),\n+      icon: () => h('i', { class: `${route.meta?.icon} text-16` }),\n+    }\n+  \n+    // 获取显示的菜单\n+    const visibleChildren = route.children\n+      ? route.children.filter((item) => item.name && !item.isHidden)\n+      : []\n+  \n+    if (visibleChildren.length === 1) {\n+      // 当只有一个子路由时，只展示子路由，由于需要考虑子路由还有子路由的情况，所以此处写法比较复杂\n+      const singleRoute = visibleChildren[0]\n+      menuItem = {\n+        ...menuItem,\n+        label: singleRoute.meta?.title || singleRoute.name,\n+        key: singleRoute.name,\n+        path: resolvePath(menuItem.path, singleRoute.path),\n+        icon: () => h('i', { class: `${singleRoute.meta?.icon} text-16` }),\n+      }\n+  \n+      // 考虑孙路由的情况，由于是递归处理的，所以理论上可以展示的层级没有数量上的限制\n+      const visibleItems = singleRoute.children\n+        ? singleRoute.children.filter((item) => item.name && !item.isHidden)\n+        : []\n+  \n+      if (visibleItems.length === 1) {\n+        menuItem = getMenuItem(visibleItems[0], menuItem.path)\n+      } else if (visibleItems.length > 1) {\n+        menuItem.children = visibleItems.map((item) => getMenuItem(item, menuItem.path))\n+      }\n+    } else if (visibleChildren.length > 1) {\n+      menuItem.children = visibleChildren.map((item) => getMenuItem(item, menuItem.path))\n+    }\n+    return menuItem\n+  }\n+  \n+  // 不考虑单个子路由情况的写法\n+  function getMenuItem2(route, basePath = '') {\n+    let menuItem = {\n+      label: (route.meta && route.meta.title) || route.name,\n+      key: route.name,\n+      path: resolvePath(basePath, route.path),\n+      icon: () => h('i', { class: 'i-mdi:home text-16' }),\n+    }\n+  \n+    if (route.children?.length > 0) {\n+      // 递归生成子菜单\n+      menuItem.children = route.children.map((item) => getMenuItem(item, menuItem.path))\n+    }\n+    return menuItem\n+  }\n+  \n+  function resolvePath(basePath, path) {\n+    if (isExternal(path)) return path\n+    return (\n+      '/' +\n+      [basePath, path]\n+        .filter((path) => !!path && path !== '/')\n+        .map((path) => path.replace(/(^\\/)|(\\/$)/g, ''))\n+        .join('/')\n+    )\n+  }\n+  \n+  /** 判断是否是外链 */\n+  function isExternal(path) {\n+    return /^(https?:|mailto:|tel:)/.test(path)\n+  }\n+  \n+  function handleMenuSelect(key, item) {\n+    if (isExternal(item.path)) {\n+      window.open(item.path)\n+    } else {\n+      router.push(item.path)\n+    }\n+  }\n   </script>\n   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1698113188441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,142 +1,187 @@\n <template>\n-    <div class=\"wh-full flex\">\n-      <aside\n-        class=\"flex-col flex-shrink-0 transition-width-300\"\n-        :class=\"appStore.collapsed ? 'w-64' : 'w-220'\"\n-        border-r=\"1px solid #efeff5\"\n-      >\n-        <header class=\"f-c-c h-60\" border-b=\"1px solid #efeff5\">\n-          <span class=\"font-bold text-18 text-primary\">Logo</span>\n-        </header>\n-        <n-menu\n-          ref=\"menu\"\n-          accordion\n-          :indent=\"18\"\n-          :collapsed-icon-size=\"22\"\n-          :collapsed-width=\"64\"\n-          :collapsed=\"appStore.collapsed\"\n-          :options=\"menuOptions\"\n-          :value=\"route.name\"\n-          @update:value=\"handleMenuSelect\"\n-        />\n-      </aside>\n-  \n-      <article class=\"w-0 flex-col flex-1\">\n-        <header class=\"h-60 flex-shrink-0 flex items-center\" border-b=\"1px solid #efeff5\">\n-          <div class=\"f-c-c cursor-pointer text-20 ml-12\" @click=\"appStore.switchCollapsed\">\n-            <i v-if=\"appStore.collapsed\" i-line-md-menu-unfold-left />\n-            <i v-else i-line-md-menu-fold-left />\n-          </div>\n-          <div class=\"ml-auto flex items-center\">\n-            <img :src=\"userStore.userInfo.avatar\" class=\"h-36 w-36 rounded-full\" />\n-            <n-button class=\"mx-12\" type=\"primary\" ghost @click=\"userStore.logout\">退出登录</n-button>\n-          </div>\n-        </header>\n-        <main class=\"flex-1 h-full bg-#f5f6fb overscroll-auto p-24\">\n-          <RouterView />\n-        </main>\n-      </article>\n-    </div>\n-  </template>\n-  \n-  <script setup>\n-  import { useAppStore } from '@/store/app'\n-  import { useUserStore } from '@/store/user'\n-  import { usePermissionStore } from '@/store/permission'\n-  import { h } from 'vue'\n-  \n-  const appStore = useAppStore()\n-  const userStore = useUserStore()\n-  const permissionStore = usePermissionStore()\n-  const router = useRouter()\n-  const route = useRoute()\n-  \n-  const menu = ref(null)\n-  \n-  const menuOptions = computed(() => {\n-    return permissionStore.menus.map((item) => getMenuItem(item))\n-  })\n-  \n-  // 当只有一个子路由时，只展示子路由，由于需要考虑子路由还有子路由的情况，所以此处写法比较复杂\n-  // 如果实在不好理解，可以考虑另一种不考虑单个子路由情况的写法: getMenuItem2\n-  function getMenuItem(route, basePath = '') {\n-    let menuItem = {\n-      label: (route.meta && route.meta.title) || route.name,\n-      key: route.name,\n-      path: resolvePath(basePath, route.path),\n-      icon: () => h('i', { class: `${route.meta?.icon} text-16` }),\n+  <div class=\"wh-full flex\">\n+    <aside\n+      class=\"flex-col flex-shrink-0 transition-width-300\"\n+      :class=\"appStore.collapsed ? 'w-64' : 'w-220'\"\n+      border-r=\"1px solid #efeff5\"\n+    >\n+      <header class=\"f-c-c h-60\" border-b=\"1px solid #efeff5\">\n+        <span class=\"font-bold text-18 text-primary\">Logo</span>\n+      </header>\n+      <n-menu\n+        accordion\n+        :indent=\"18\"\n+        :collapsed-icon-size=\"22\"\n+        :collapsed-width=\"64\"\n+        :collapsed=\"appStore.collapsed\"\n+        :options=\"menuOptions\"\n+        :value=\"route.name\"\n+        @update:value=\"handleMenuSelect\"\n+      />\n+    </aside>\n+\n+    <article class=\"w-0 flex-col flex-1\">\n+      <header class=\"h-60 flex-shrink-0 flex items-center px-24\" border-b=\"1px solid #efeff5\">\n+        <div class=\"f-c-c cursor-pointer text-20\" @click=\"appStore.switchCollapsed\">\n+          <i v-if=\"appStore.collapsed\" i-line-md-menu-unfold-left />\n+          <i v-else i-line-md-menu-fold-left />\n+        </div>\n+        <n-breadcrumb class=\"ml-12\">\n+          <n-breadcrumb-item\n+            v-for=\"item in route.matched.filter((item) => !!item.meta?.title)\"\n+            :key=\"item.path\"\n+            @click=\"handleBreadClick(item.path)\"\n+          >\n+            {{ item.meta.title }}\n+          </n-breadcrumb-item>\n+        </n-breadcrumb>\n+        <div class=\"ml-auto flex items-center\">\n+          <n-dropdown :options=\"dropdownOptions\" @select=\"handleDropSelect\">\n+            <div class=\"flex items-center cursor-pointer\">\n+              <img :src=\"userStore.userInfo.avatar\" class=\"h-36 w-36 rounded-full\" />\n+              <span class=\"ml-12 opacity-80\">\n+                {{ userStore.userInfo.username }}({{ userStore.userInfo.role?.name }})\n+              </span>\n+            </div>\n+          </n-dropdown>\n+        </div>\n+      </header>\n+      <main class=\"flex-1 h-full bg-#f5f6fb overscroll-auto p-24\">\n+        <RouterView />\n+      </main>\n+    </article>\n+  </div>\n+</template>\n+\n+<script setup>\n+import { useAppStore } from '@/store/app'\n+import { useUserStore } from '@/store/user'\n+import { usePermissionStore } from '@/store/permission'\n+import { h } from 'vue'\n+\n+const appStore = useAppStore()\n+const userStore = useUserStore()\n+const permissionStore = usePermissionStore()\n+const router = useRouter()\n+const route = useRoute()\n+\n+/************************ 菜单相关的逻辑（建议单独封装抽离出去） ********************************/\n+\n+const menuOptions = computed(() => {\n+  return permissionStore.menus.map((item) => getMenuItem(item))\n+})\n+\n+// 当只有一个子路由时，只展示子路由，由于需要考虑子路由还有子路由的情况，所以此处写法比较复杂\n+// 如果实在不好理解，可以考虑另一种不考虑单个子路由情况的写法: getMenuItem2\n+function getMenuItem(route, basePath = '') {\n\\ No newline at end of file\n+  let menuItem = {\n+    label: (route.meta && route.meta.title) || route.name,\n+    key: route.name,\n+    path: resolvePath(basePath, route.path),\n+    icon: () => h('i', { class: `${route.meta?.icon} text-16` }),\n+  }\n+\n+  // 获取显示的菜单\n+  const visibleChildren = route.children\n+    ? route.children.filter((item) => item.name && !item.isHidden)\n+    : []\n+\n+  if (visibleChildren.length === 1) {\n+    // 当只有一个子路由时，只展示子路由，由于需要考虑子路由还有子路由的情况，所以此处写法比较复杂\n+    const singleRoute = visibleChildren[0]\n+    menuItem = {\n+      ...menuItem,\n+      label: singleRoute.meta?.title || singleRoute.name,\n+      key: singleRoute.name,\n+      path: resolvePath(menuItem.path, singleRoute.path),\n+      icon: () => h('i', { class: `${singleRoute.meta?.icon} text-16` }),\n     }\n-  \n-    // 获取显示的菜单\n-    const visibleChildren = route.children\n-      ? route.children.filter((item) => item.name && !item.isHidden)\n+\n+    // 考虑孙路由的情况，由于是递归处理的，所以理论上可以展示的层级没有数量上的限制\n+    const visibleItems = singleRoute.children\n+      ? singleRoute.children.filter((item) => item.name && !item.isHidden)\n       : []\n-  \n-    if (visibleChildren.length === 1) {\n-      // 当只有一个子路由时，只展示子路由，由于需要考虑子路由还有子路由的情况，所以此处写法比较复杂\n-      const singleRoute = visibleChildren[0]\n-      menuItem = {\n-        ...menuItem,\n-        label: singleRoute.meta?.title || singleRoute.name,\n-        key: singleRoute.name,\n-        path: resolvePath(menuItem.path, singleRoute.path),\n-        icon: () => h('i', { class: `${singleRoute.meta?.icon} text-16` }),\n-      }\n-  \n-      // 考虑孙路由的情况，由于是递归处理的，所以理论上可以展示的层级没有数量上的限制\n-      const visibleItems = singleRoute.children\n-        ? singleRoute.children.filter((item) => item.name && !item.isHidden)\n-        : []\n-  \n-      if (visibleItems.length === 1) {\n-        menuItem = getMenuItem(visibleItems[0], menuItem.path)\n-      } else if (visibleItems.length > 1) {\n-        menuItem.children = visibleItems.map((item) => getMenuItem(item, menuItem.path))\n-      }\n-    } else if (visibleChildren.length > 1) {\n-      menuItem.children = visibleChildren.map((item) => getMenuItem(item, menuItem.path))\n+\n+    if (visibleItems.length === 1) {\n+      menuItem = getMenuItem(visibleItems[0], menuItem.path)\n+    } else if (visibleItems.length > 1) {\n+      menuItem.children = visibleItems.map((item) => getMenuItem(item, menuItem.path))\n     }\n-    return menuItem\n+  } else if (visibleChildren.length > 1) {\n+    menuItem.children = visibleChildren.map((item) => getMenuItem(item, menuItem.path))\n   }\n-  \n-  // 不考虑单个子路由情况的写法\n-  function getMenuItem2(route, basePath = '') {\n-    let menuItem = {\n-      label: (route.meta && route.meta.title) || route.name,\n-      key: route.name,\n-      path: resolvePath(basePath, route.path),\n-      icon: () => h('i', { class: 'i-mdi:home text-16' }),\n-    }\n-  \n-    if (route.children?.length > 0) {\n-      // 递归生成子菜单\n-      menuItem.children = route.children.map((item) => getMenuItem(item, menuItem.path))\n-    }\n-    return menuItem\n+  return menuItem\n+}\n+\n+// 不考虑单个子路由情况的写法\n+function getMenuItem2(route, basePath = '') {\n+  let menuItem = {\n+    label: (route.meta && route.meta.title) || route.name,\n+    key: route.name,\n+    path: resolvePath(basePath, route.path),\n+    icon: () => h('i', { class: 'i-mdi:home text-16' }),\n   }\n-  \n-  function resolvePath(basePath, path) {\n-    if (isExternal(path)) return path\n-    return (\n-      '/' +\n-      [basePath, path]\n-        .filter((path) => !!path && path !== '/')\n-        .map((path) => path.replace(/(^\\/)|(\\/$)/g, ''))\n-        .join('/')\n-    )\n+\n+  if (route.children?.length > 0) {\n+    // 递归生成子菜单\n+    menuItem.children = route.children.map((item) => getMenuItem(item, menuItem.path))\n   }\n-  \n-  /** 判断是否是外链 */\n-  function isExternal(path) {\n-    return /^(https?:|mailto:|tel:)/.test(path)\n+  return menuItem\n+}\n+\n+function resolvePath(basePath, path) {\n+  if (isExternal(path)) return path\n+  return (\n+    '/' +\n+    [basePath, path]\n+      .filter((path) => !!path && path !== '/')\n+      .map((path) => path.replace(/(^\\/)|(\\/$)/g, ''))\n+      .join('/')\n+  )\n+}\n+\n+/** 判断是否是外链 */\n+function isExternal(path) {\n+  return /^(https?:|mailto:|tel:)/.test(path)\n+}\n+\n+function handleMenuSelect(key, item) {\n+  if (isExternal(item.path)) {\n+    window.open(item.path)\n+  } else {\n+    router.push(item.path)\n   }\n-  \n-  function handleMenuSelect(key, item) {\n-    if (isExternal(item.path)) {\n-      window.open(item.path)\n-    } else {\n-      router.push(item.path)\n-    }\n+}\n+\n+/******************** 头部相关的逻辑（建议单独封装抽离出去） ******************************/\n+\n+function handleBreadClick(path) {\n+  if (path === route.path) return\n+  router.push(path)\n+}\n+\n+const dropdownOptions = [\n+  {\n+    label: '退出登录',\n+    key: 'logout',\n+    icon: () => h('i', { class: 'i-mdi:exit-to-app text-14' }),\n+  },\n+]\n+\n+function handleDropSelect(key) {\n+  if (key === 'logout') {\n+    $dialog.info({\n+      showIcon: false,\n+      title: '提示',\n+      type: 'info',\n+      content: '确认退出？',\n+      positiveText: '确定',\n+      negativeText: '取消',\n+      onPositiveClick() {\n+        userStore.logout()\n+        $message.success('已退出登录')\n+      },\n+    })\n   }\n-  </script>\n-  \n+}\n+</script>\n"
                }
            ],
            "date": 1698110998372,
            "name": "Commit-0",
            "content": "<template>\n    <div class=\"wh-full flex\">\n      <aside\n        class=\"flex-col flex-shrink-0 transition-width-300\"\n        :class=\"appStore.collapsed ? 'w-64' : 'w-220'\"\n        border-r=\"1px solid #efeff5\"\n      >\n        <header class=\"f-c-c h-60\" border-b=\"1px solid #efeff5\">Vue Simple Admin</header>\n      </aside>\n  \n      <article class=\"w-0 flex-col flex-1\">\n        <header class=\"h-60 flex-shrink-0 flex items-center\" border-b=\"1px solid #efeff5\">\n          <div class=\"f-c-c cursor-pointer text-20 ml-12\" @click=\"appStore.switchCollapsed\">\n            <i v-if=\"appStore.collapsed\" i-line-md-menu-unfold-left />\n            <i v-else i-line-md-menu-fold-left />\n          </div>\n          <div class=\"ml-auto flex items-center\">\n            <img :src=\"userStore.userInfo.avatar\" class=\"h-36 w-36 rounded-full\" />\n            <n-button class=\"mx-12\" type=\"primary\" ghost @click=\"userStore.logout\">退出登录</n-button>\n          </div>\n        </header>\n        <main class=\"flex-1 h-full bg-#f5f6fb overscroll-auto p-24\">\n          <RouterView />\n        </main>\n      </article>\n    </div>\n  </template>\n  \n  <script setup>\n  import { useAppStore } from '@/store/app'\n  import { useUserStore } from '@/store/user'\n  \n  const appStore = useAppStore()\n  const userStore = useUserStore()\n  </script>\n  "
        }
    ]
}